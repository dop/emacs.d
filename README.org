#+TITLE: README

* Install

#+begin_src shell
git clone git://git.sv.gnu.org/emacs.git
git checkout emacs-28 # or whatever version
#+end_src

Alternatively, since Emacs history is long and repository is big, we can retrieve only the current source:

#+begin_src shell
git clone --depth 1 --branch emacs-28 git://git.sv.gnu.org/emacs.git
#+end_src

Below are some of the build recipes for the machines I use.

** Ubuntu
Dependencies:
#+begin_src shell
  apt install \
      libgtk-3-dev texinfo \
      libgccjit-9-dev libncurses-dev libgnutls28-dev libgif-dev \
      libxpm-dev libjansson-dev libmagickwand-dev libmagickcore-dev
#+end_src

Configure:
#+begin_src shell
  ./configure --prefix=$HOME/.local --with-x-toolkit=gtk3 --with-cairo \
              --with-imagemagick --with-json --with-harfbuzz --with-jpeg --with-png \
              --with-pdf --with-gif --with-tiff --with-xpm --with-gnutls \
              --with-native-compilation
#+end_sr
** MacOS

Use [[https://www.macports.org/][MacPorts]] to install [[https://github.com/akheron/jansson][jansson]].

#+begin_src shell
  ./autogen.sh
  ./configure
  make install
  mv nextstep/Emacs.app /Applications
#+end_src

Disable MacOS handling of =Control-Command-D= (show/hide word definition):

#+begin_src shell
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 70 '<dict><key>enabled</key><false/></dict>'
#+end_src

Trigger disabled hotkey to take effect:

#+begin_src shell
/System/Library/PrivateFrameworks/SystemAdministration.framework/Resources/activateSettings -u
#+end_src
* TODOs
- Figure out better monorepo workflow: how to choose if to run command in current project or top?
  - Option A: introduce top versions of commands, e.g. =project-top-eshell= to open shell on super-project (e.g. in monorepo), bind it to =C-x p E=.
  - Option B: introduce state/prefix which would switch how project root is calculated before running project command, e.g. =C-x p u C-x p e=.
